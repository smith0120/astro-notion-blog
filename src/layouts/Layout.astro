---
import { PUBLIC_GA_TRACKING_ID, ENABLE_LIGHTBOX } from '../server-constants.ts'
import { getDatabase } from '../lib/notion/client.ts'
import { getNavLink, getStaticFilePath, filePath } from '../lib/blog-helpers.ts'
import '../styles/syntax-coloring.css'
import GoogleAnalytics from '../components/GoogleAnalytics.astro'
import SearchModal from '../components/SearchModal.astro'
import SearchButton from '../components/SearchButton.astro'

export interface Props {
  title: string
  description: string
  path: string
  ogImage: string
}

const { title = '', description = '', path = '/', ogImage = '' } = Astro.props

const database = await getDatabase()

const siteTitle = title ? `${title} - ${database.Title}` : database.Title
const siteDescription = description ? description : database.Description
const siteURL = new URL(getNavLink(path), Astro.site).toString()
const siteOGImage = new URL(
  getStaticFilePath('/default-og-image.png'),
  Astro.site
)

let coverImageURL: string
if (database.Cover) {
  if (database.Cover.Type === 'external') {
    coverImageURL = database.Cover.Url
  } else if (database.Cover.Type === 'file') {
    try {
      coverImageURL = filePath(new URL(database.Cover.Url))
    } catch {
      console.log('Invalid DB cover image URL: ', database.Cover?.Url)
    }
  }
}

let customIconURL: string
if (database.Icon && database.Icon.Type === 'file') {
  try {
    customIconURL = filePath(new URL(database.Icon.Url))
  } catch {
    console.log('Invalid DB custom icon URL: ', database.Icon?.Url)
  }
}
---

<!DOCTYPE html>
<html lang="en" prefix="og: https://ogp.me/ns#">
  <head>
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="robots" content="max-image-preview:large" />
    <meta charset="UTF-8" />
    <meta name="generator" content={Astro.generator} />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <link rel="canonical" href={siteURL} />
    <meta property="og:url" content={siteURL} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:site_name" content={database.Title} />
    <meta property="og:image" content={ogImage || siteOGImage} />
    <meta name="twitter:title" content={siteTitle} />
    <meta name="twitter:description" content={siteDescription} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:image" content={ogImage || siteOGImage} />
    <link
      rel="stylesheet"
      href="https://cdn.jsdelivr.net/npm/katex@0.16.4/dist/katex.min.css"
      integrity="sha384-vKruj+a13U8yHIkAyGgK1J3ArTLzrFGBbBc0tDp4ad/EyewESeXE/Iv67Aj8gKZ0"
      crossorigin="anonymous"
    />
    <link rel="sitemap" href="/sitemap-index.xml" />
  </head>
  <body>
    <GoogleAnalytics trackingId={PUBLIC_GA_TRACKING_ID} />
    <div class="container">

      <div>
        <main>
          <div class="content">
            <header>
              <h1>
                <a href={getNavLink('/')}>
                  {
                    database.Icon && database.Icon.Type === 'emoji' ? (
                      <>
                        <span>{database.Icon.Emoji}</span>
                        {database.Title}
                      </>
                    ) : database.Icon && database.Icon.Type === 'external' ? (
                      <>
                        <img src={database.Icon.Url} alt="Site icon image" />
                        {database.Title}
                      </>
                    ) : database.Icon && database.Icon.Type === 'file' ? (
                      <>
                        <img
                          src={customIconURL}
                          class="custom-icon"
                          alt="Site icon image"
                        />
                        {database.Title}
                      </>
                    ) : (
                      database.Title
                    )
                  }
                </a>
              </h1>
              <div class="description">
                <!--{database.Description}-->
                show tech# show environment<br />
                ネットワークエンジニアというものをやりながらガジェットや新しいツール的なものが大好きでとりあえず試してみることが多い.そんなものなどを残していこうかなと >> log.<br >
                ただそれだけのoutput置き場. 
              <header>
                {
                  coverImageURL && (
                    <div class="cover">
                      <img src={coverImageURL} alt="Site cover image" loading="lazy" />
                    </div>
                  )
                }
              </header>

              <div class="description">
                <!--{database.Description}-->
                <pre>
User Access Verification
Password:
******************************
*                            *
*  Welcome to the show tech  *
*    "Tech is My Life"       *
*                            *
******************************

> en
# show run | sec category
</pre>
!<br />
description iPhoneをパーツから組み立てる<br />
&emsp;access to access to <a href="http://localhost:4321/posts/tag/iphone%E3%83%93%E3%83%AB%E3%83%89">[iphoneビルド]</a><br />
!<br />
description ネットワーク基礎をAIさんと勉強する<br />
&emsp;access to <a href="https://smithlabo.com/posts/tag/study">[ネットワーク勉強]</a><br />
!<br />
description n8nをはじめとした自動化<br />
&emsp;access to <a href="http://localhost:4321/posts/tag/%E8%87%AA%E5%8B%95%E5%8C%96">[自動化] </a><br />
!<br />
description Aliexpressなどの配送履歴のメモ<br />
&emsp;access to <a href="http://localhost:4321/posts/tag/%E9%85%8D%E9%80%81%E5%B1%A5%E6%AD%B4">[配送履歴]</a><br />
!<br />
description ガジェットなどの趣味のこと<br />
&emsp;access to <a href="http://localhost:4321/posts/tag/%E8%B6%A3%E5%91%B3">[趣味]</a><br />
!<br />
description macカスタマイズなど<br />
&emsp;access to <a href="https://smithlabo.com/posts/tag/mac">[mac]</a><br />
!<br />
description よく参照するものを作成してみた<br />
&emsp;access to <a href="https://smithlabo.com/posts/tag/tools">[tools]</a><br />
!<br />
description 本職のネットワークの趣味よりな話<br />
&emsp;access to <a href="https://smithlabo.com/posts/tag/network">[network]</a><br />
!<br />
description windowsも利用するのです<br />
&emsp;access to <a href="https://smithlabo.com/posts/tag/windows">[windows]</a><br />
!<br />
description ホームページ作成などのメモ<br />
&emsp;access to <a href="https://smithlabo.com/posts/tag/homepage">[homepage]</a><br />
!<br />
<pre>
# show run | sec recommendation
<h4>ネットワークを勉強するならまずはこれ
  <a href="https://hb.afl.rakuten.co.jp/ichiba/399adaf5.069f77c4.399adaf6.251f1749/?pc=https%3A%2F%2Fitem.rakuten.co.jp%2Frakutenkobo-ebooks%2Fab1bd4bf09ef34b7b23164546473999d%2F&link_type=hybrid_url&ut=eyJwYWdlIjoiaXRlbSIsInR5cGUiOiJoeWJyaWRfdXJsIiwic2l6ZSI6IjI0MHgyNDAiLCJuYW0iOjEsIm5hbXAiOiJyaWdodCIsImNvbSI6MSwiY29tcCI6ImRvd24iLCJwcmljZSI6MCwiYm9yIjoxLCJjb2wiOjEsImJidG4iOjEsInByb2QiOjAsImFtcCI6ZmFsc2V9">マスタリングTCP/IP　入門編（第6版）</a>
</h4>
!
# show run | sec new entry
</pre>
              </div>
            </header>

            <slot name="main" />

<div class="description">
<h4>techに生きるならmacbookは必需品です<br />
<a href="https://hb.afl.rakuten.co.jp/hgc/00113f3e.4c521fe2.0bce4490.73e3e708/?pc=https%3A%2F%2Fsearch.rakuten.co.jp%2Fsearch%2Fmall%2Fmacbook%2F&link_type=hybrid_url&ut=eyJwYWdlIjoidXJsIiwidHlwZSI6Imh5YnJpZF91cmwiLCJjb2wiOjF9">macbook検索</a>
</div>
<pre>
!
!
show tech# show run | sec my life
!
interface Loopback0
description Tech is my life
!
alias exec life
echo "Tech is my life”
!
— More —
# conf t
(config)# tech-life enable
(config)# passion always-on
(config)# not end
# wr mem
Building configuration...
[OK]
# exit
</pre>

            <footer>
              <div>
                <!--<span>Powered by&nbsp;</span>
                <a href="https://github.com/otoyo/astro-notion-blog"
                  >astro-notion-blog</a>-->
              </div>
            </footer>
          </div>
        </main>

        <aside>
          <SearchButton />
          <slot name="aside" />
        </aside>
      </div>
    </div>

    <SearchModal />
    {
      ENABLE_LIGHTBOX && (
        <script src={getStaticFilePath('/scripts/fslightbox.js')} />
      )
    }
  </body>
</html>

<style>
  .container{
    height: 90vh;
    align-items: center; /* optional */
  }
  .container > div {
    display: flex;
    max-width: 1280px;
  }
  @media (max-width: 640px) {
    .container > div {
      display: block;
    }
  }

  main {
    flex: 1;
    order: 2;
    justify-content: space-between;
  }
  @media (max-width: 640px) {
    main {
      order: 1;
    }
  }

  aside {
    order: 2;
    width: 300px;
    padding: 20px 20px;
    background-color: #f4f4f4;
    background-color: #fbf8fb;
    position: sticky;
    top: 0;
    height: 100vh;
  }
  @media (max-width: 640px) {
    aside {
      order: 2;
      width: 100%;
    }
  }

  div.cover {
  }
  div.cover img {
    display: block;
    width: 100%;
    height: 20vh;
    object-fit: cover;
    object-position: center 60%;
  }

  div.content {
    padding: 20px 40px;
  }
  @media (max-width: 640px) {
    div.content {
      padding: 0 18px;
    }
  }

  main header {
    padding: 20px 0 20px;
  }
  main header h1 {
    font-weight: 700;
    color: #333;
  }
  main header h1 a {
    display: block;
    color: inherit;
  }
  main header h1 a:hover {
    color: inherit;
  }
  main header h1 a span,
  main header h1 a img {
    display: inline-block;
    font-size: 1.1em;
  }
  main header h1 a span {
    margin-right: 0.3em;
    margin-left: -0.1rem;
  }
  main header h1 a img {
    width: 1.2em;
    height: 1.2em;
    margin-right: 0.2em;
    margin-left: -0.3rem;
    vertical-align: sub;
  }
  main header h1 a img.custom-icon {
    border-radius: var(--radius);
  }

  main header div.description {
    padding: 0.3rem 0 0.6rem;
    font-size: 0.95rem;
  }
  
  div.description a{
    background-color: rgb(243, 234, 251);
    font-size: 0.８rem;
  }
  div.description h4{
    background-color: rgb(232, 232, 254);
  }

  main footer {
    margin: 30px 0 10px;
    text-align: center;
    font-size: 0.75rem;
  }
  @media (max-width: 640px) {
    main footer {
      margin: 0 auto 30px;
    }
  }
  main footer span {
    color: #777;
  }
  main footer a {
    color: inherit;
    text-decoration: underline;
  }
</style>

<style is:global>
  :root {
    --gap-quarter: 0.25rem;
    --gap-half: 0.5rem;
    --gap: 1rem;
    --gap-double: 2rem;

    --bg: #fff;
    --fg: #333;
    --accents-1: #666;
    --accents-2: #666;
    --accents-3: #666;
    --geist-foreground: #000;
    --geist-success: #690;

    --radius: 4px;

    --font-sans: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto',
      'Oxygen', 'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans',
      'Helvetica Neue', sans-serif;
    --font-mono: SFMono-Regular, Menlo, Consolas, 'PT Mono', 'Liberation Mono',
      Courier, monospace;
  }

  * {
    box-sizing: border-box;
    word-break: break-word;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    font-size: 16px;
    display: flex;
    justify-content: center;   /* 水平方向の中央揃え */
    align-items: center;       /* 垂直方向の中央揃え */
    min-height: 100vh;         /* 画面全体の高さを確保 */
  }

  body {
    min-height: 100vh;
    background: var(--bg);
    color: var(--fg);
    //font-family: ui-sans-serif, -apple-system, BlinkMacSystemFont, 'Segoe UI',
    //  Helvetica, 'Hiragino Sans', 'Hiragino Kaku Gothic ProN',
    //  'Hiragino Sans GB', メイリオ, Meiryo, 'Apple Color Emoji', Arial,
    //  sans-serif, 'Segoe UI Emoji', 'Segoe UI Symbol';
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, Liberation Mono, Courier New, monospace;

    /*background-image: radial-gradient(#ddd 1px, transparent 1px),
      radial-gradient(#ddd 1px, transparent 1px);*/
    background-position: 0 0, 25px 25px;
    background-attachment: fixed;
    background-size: 50px 50px;

    /* Hack */
    overflow-x: hidden;

    -webkit-font-smoothing: antialiased;
    -webkit-text-size-adjust: 100%;
  }

  figure {
    margin: 0;
    font-size: 0.85rem;
    color: #999;
    line-height: 1.8rem;
  }

  a {
    color: var(--accents-1);
    text-decoration: none;
  }
  a:hover {
    color: var(--accents-1);
  }

  mark {
    padding: var(--gap-quarter);
    border-radius: var(--radius);
    background: rgba(247, 212, 255, 0.8);
  }

  h1 {
    margin: 0;
    color: var(--fg);
    font-size: 2rem;
    font-weight: 700;
  }

  @media (max-width: 640px) {
    h1 {
      font-size: 1.6rem;
    }
  }

  ol {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  p,
  ul {
    color: #222;
    font-weight: 400;
    font-size: 0.9rem;
    line-height: 1.8rem;
  }
  ul,
  ol {
    margin: 0;
    padding-inline-start: 1.5rem;
  }
  pre {
    margin: 0;
    white-space: pre;
    tab-size: 2;
  }
  pre :global(code) {
    overflow: auto;
    -webkit-overflow-scrolling: touch;
  }

  hr {
    display: block;
    height: 1px;
    border: 0;
    margin: 0.3rem 0;
    background-color: #cccccc;
  }

  code {
    font-size: 0.9rem;
    background: rgba(135, 131, 120, 0.15);
    color: #eb5757;
    padding: 0.25rem;
    border-radius: var(--radius);
    font-family: var(--font-mono);
  }

  table {
    display: block;
    overflow-x: auto;
    white-space: nowrap;
    border-collapse: collapse;
  }

  table tr {
    vertical-align: top;
  }

  table th {
    font-weight: 600;
    background-color: #f4f4f4;
  }

  table td,
  table th {
    font-size: 0.9rem;
    border: 1px solid #e4e4e4;
    padding: 0.5rem 1rem;
    text-align: left;
    line-height: 1.2rem;
  }
  table td::after {
    content: '';
    display: inline-block;
    min-height: 0.9rem;
  }
</style>
